// <auto-generated />
using System;
using Healthcare_And_Wellness.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Healthcare_And_Wellness.Migrations
{
    [DbContext(typeof(ManagementContext))]
    partial class ManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Healthcare_And_Wellness.Models.Applicant", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"), 1L, 1);

                    b.Property<string>("emailUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("jobID")
                        .HasColumnType("int");

                    b.Property<string>("nameUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userID");

                    b.HasIndex("jobID");

                    b.ToTable("applicants");
                });

            modelBuilder.Entity("Healthcare_And_Wellness.Models.Job", b =>
                {
                    b.Property<int>("jobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("jobID"), 1L, 1);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusJob")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("jobID");

                    b.ToTable("jobs");

                    b.HasData(
                        new
                        {
                            jobID = 1,
                            description = "The responsibility of the Instructor Therapist is to deliver direct ABA (Applied Behaviour Analysis) interventions. This includes providing input into the development and implementation of Behaviour Support Plans (BSPs), collecting baseline data, maintaining progress notes (i.e., case notes), the recording and graphing of relevant data, parent coaching, individual and group services, as well as the preparation of teaching materials and also working with, and mentoring volunteers.",
                            jobName = "Instructor Therapist",
                            statusJob = "Apply"
                        });
                });

            modelBuilder.Entity("Healthcare_And_Wellness.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 30,
                            ConfirmPassword = "Admin@1234",
                            DateOfBirth = "1994-01-01",
                            Name = "Administrator",
                            Password = "Admin@1234",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Age = 21,
                            ConfirmPassword = "Lovepreet@1234",
                            DateOfBirth = "2003-10-26",
                            Name = "Lovepreet Singh",
                            Password = "Lovepreet@1234",
                            Role = "Member",
                            Username = "member"
                        });
                });

            modelBuilder.Entity("Healthcare_And_Wellness.Models.Applicant", b =>
                {
                    b.HasOne("Healthcare_And_Wellness.Models.Job", "Job")
                        .WithMany("applicants")
                        .HasForeignKey("jobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Healthcare_And_Wellness.Models.Job", b =>
                {
                    b.Navigation("applicants");
                });
#pragma warning restore 612, 618
        }
    }
}
